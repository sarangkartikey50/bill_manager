{"version":3,"sources":["constants/billManager.js","redux/actions/billManager.js","utils/createActions.js","shared/Loader/index.js","shared/Loader/index.module.scss","styles/app.module.scss","redux/actionTypes/billManager.js","App.js","redux/reducers/billManager.js","redux/reducers/index.js","apis/billManager.js","redux/sagas/billManager.js","redux/sagas/index.js","redux/store.js","index.js"],"names":["MONTH_MAP","0","1","2","3","4","5","6","7","8","9","10","11","MONTHLY_BUDGET","createActions","types","actions","Object","values","forEach","type","camelCase","payload","billManagerTypes","memo","className","cx","styles","container","viewBox","d","stroke","fill","strokeWidth","fillRule","module","exports","GET_BILLS","GET_BILLS_SUCCESS","GET_BILLS_ERROR","DELETE_BILL","UPDATE_BILL","Header","lazy","BillsManager","App","fallback","Loader","suspenseFallback","initState","bills","billsById","billsLoading","billsError","categories","timeSeriesChartData","getBillsToBePaidByMonth","groupByMonth","bill","date","Date","month","getMonth","year","getFullYear","key","id","push","keys","monthlyBillSortedArray","sort","a","b","amount","totalAmount","Number","canBePaid","getTimeSeriesChartData","timeSeriesObj","monthIndex","keyAmount","getCategories","includes","category","combineReducers","billManager","state","map","filter","length","getBills","Promise","resolve","billsMock","getBillsSaga","call","put","billManagerActions","getBillsSuccess","getBillsError","takeLatest","rootSaga","all","billManagerSaga","middlewares","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6GAAA,wEAAMA,EAAY,CAChBC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,GAAI,MACJC,GAAI,OAGAC,EAAiB,M,4DCZRC,ICDA,SAAuBC,GACpC,IAAMC,EAAU,GAIhB,OAHAC,OAAOC,OAAOH,GAAOI,SAAQ,SAAAC,GAC3BJ,EAAQK,IAAUD,IAAS,SAAAE,GAAO,MAAK,CAAEF,OAAME,eAE1CN,EDJMF,CAAcS,I,gCEH7B,sDAuBeC,oBAlBA,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAChB,OACE,yBAAKA,UAAWC,IAAGC,IAAOC,UAAWH,GAAYI,QAAQ,aACvD,0BACEC,EAAE,4EACFC,OAAO,eACPC,KAAK,OACLC,YAAY,IACZC,SAAS,iB,mBCZjBC,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,uB,mBCA/DD,EAAOC,QAAU,CAAC,iBAAmB,gC,02CCDrC,+OAAMC,EAAY,YACZC,EAAoB,oBACpBC,EAAkB,kBAElBC,EAAc,cACdC,EAAc,e,sKCDdC,EAASC,gBAAK,kBAAM,iCACpBC,EAAeD,gBAAK,kBAAM,uDAajBE,MAXf,WACE,OACE,yBAAKpB,UAAU,OACb,kBAAC,WAAD,CAAUqB,SAAU,kBAACC,EAAA,EAAD,CAAQtB,UAAWE,IAAOqB,oBAC5C,kBAACN,EAAD,MACA,kBAACE,EAAD,S,6CCTFK,EAAY,CAChBC,MAAO,GACPC,UAAW,GACXC,cAAc,EACdC,WAAY,GACZC,WAAY,GACZC,oBAAqB,IAGjBC,EAA0B,SAACN,GAC/B,IAAMO,EAAe,GACfN,EAAY,GAwBlB,OAvBAD,EAAM/B,SAAQ,SAACuC,GACb,IAAMC,EAAO,IAAIC,KAAKF,EAAKC,MACrBE,EAAQF,EAAKG,WAAa,EAC1BC,EAAOJ,EAAKK,cACZC,EAAG,UAAMJ,EAAN,YAAeE,GACxBZ,EAAUO,EAAKQ,IAAMR,EAChBD,EAAaQ,KAAMR,EAAaQ,GAAO,IAC5CR,EAAaQ,GAAKE,KAAKT,MAEzBzC,OAAOmD,KAAKX,GAActC,SAAQ,SAAC8C,GACjC,IAAMI,EAAyBZ,EAAaQ,GAAKK,MAC/C,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAErBC,EAAc,EAClBL,EAAuBlD,SAAQ,SAACuC,IAC9BgB,GAAeC,OAAOjB,EAAKe,UACR5D,IACjBsC,EAAUO,EAAKQ,IAAf,eAA0BR,EAA1B,CAAgCkB,WAAW,IAE3CzB,EAAUO,EAAKQ,IAAf,eAA0BR,EAA1B,CAAgCkB,WAAW,UAI1CzB,GAGH0B,EAAyB,SAAC3B,GAC9B,IAAM4B,EAAgB,GAChBvB,EAAsB,GAe5B,OAdAL,EAAM/B,SAAQ,SAACuC,GAAU,IAAD,IAChBC,EAAO,IAAIC,KAAKF,EAAKC,MACrBoB,EAAapB,EAAKG,WAClBD,EAAQ7D,IAAU+E,GAClBd,EAAG,UAAMJ,EAAN,YAAeF,EAAKK,eACzBgB,EAAS,oBAAGF,EAAcb,UAAjB,aAAG,EAAoBQ,cAAvB,QAAiC,EAC9CK,EAAcb,GAAO,CACnBJ,MAAOI,EACPQ,OAAQO,EAAYL,OAAOjB,EAAKe,YAGpCxD,OAAOmD,KAAKU,GAAe3D,SAAQ,SAAC8C,GAClCV,EAAoBY,KAAKW,EAAcb,OAElCV,GAGH0B,EAAgB,SAAC/B,GACrB,IAAII,EAAa,GAKjB,OAJAJ,EAAM/B,SACJ,SAACuC,GAAD,OACGJ,EAAW4B,SAASxB,EAAKyB,WAAa7B,EAAWa,KAAKT,EAAKyB,aAEzD7B,GChEM8B,cAAgB,CAC7BC,YDkEa,WAAiD,IAAvCC,EAAsC,uDAA9BrC,EAA8B,yCAAjB7B,EAAiB,EAAjBA,KAAME,EAAW,EAAXA,QAClD,OAAQF,GACN,KAAKG,YACH,OAAO,eACF+D,EADL,CAEElC,cAAc,EACdC,WAAY,KAGhB,KAAK9B,oBACH,IAAMgC,EAAsBsB,EAAuBvD,GAC7C6B,EAAYK,EAAwBlC,GACpC4B,EAAQ5B,EAAQiE,KAAI,SAAC7B,GAAD,OAAUP,EAAUO,EAAKQ,OAC7CZ,EAAa2B,EAAc3D,GACjC,OAAO,eACFgE,EADL,CAEElC,cAAc,EACdF,QACAC,YACAG,aACAC,wBAIJ,KAAKhC,kBACH,OAAO,eACF+D,EADL,CAEElC,cAAc,EACdF,MAAO5B,IAGX,KAAKC,cAA+B,IAC5B2B,EAAUoC,EAAVpC,MAEN,OADAA,EAAQA,EAAMsC,QAAO,SAAC9B,GAAD,OAAUA,EAAKQ,KAAO5C,KACpC,eACFgE,EADL,CAEEpC,UAIJ,KAAK3B,cAA+B,IAC5B2B,EAAqBoC,EAArBpC,MAAOC,EAAcmC,EAAdnC,UACR7B,EAAQ4C,KAAI5C,EAAQ4C,GAAKhB,EAAMuC,QACpCtC,EAAU7B,EAAQ4C,IAAM5C,EACxB4B,EAAQA,EAAMqC,KAAI,SAAC7B,GACjB,OAAIA,EAAKQ,KAAO5C,EAAQ4C,GACf5C,EAEFoC,KAET,IAAMH,EAAsBsB,EAAuB3B,GACnDC,EAAYK,EAAwBN,GACpCA,EAAQA,EAAMqC,KAAI,SAAC7B,GAAD,OAAUP,EAAUO,EAAKQ,OAC3C,IAAMZ,EAAa2B,EAAc/B,GACjC,OAAO,eACFoC,EADL,CAEEpC,QACAK,sBACAJ,YACAG,eAIJ,QACE,OAAOgC,M,uCEpIPI,EAAW,WACf,OAAOC,QAAQC,QAAQC,I,WCGfC,GAAV,SAAUA,IAAV,yEAEsB,OAFtB,kBAE4BC,YAAKL,GAFjC,OAGI,OAHJ,SAEYxC,EAFZ,EAEYA,MAFZ,SAGU8C,YAAIC,IAAmBC,gBAAgBhD,IAHjD,8BAKI,OALJ,mCAKU8C,YAAIC,IAAmBE,cAAnB,OALd,qDASe,OAACC,YAAW7E,YAA4BuE,I,WCX9BO,GAAV,SAAUA,IAAV,iEACb,OADa,SACPC,YAAI,YAAIC,IADD,uCCCf,IAAyBC,EAQnBC,EAAiBC,cACjBC,EAAQC,YAAYC,GATDL,EAS8B,CAACC,GAJ/CK,IAAe,WAAf,cAAmBN,MAK5BC,EAAeM,IAAIV,GAEJM,Q,MCVfK,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.a40f3b84.chunk.js","sourcesContent":["const MONTH_MAP = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec',\n};\n\nconst MONTHLY_BUDGET = 15000;\n\nexport { MONTH_MAP, MONTHLY_BUDGET };\n","import * as billManagerTypes from 'redux/actionTypes/billManager';\nimport createActions from 'utils/createActions';\n\nexport default createActions(billManagerTypes);","import camelCase from 'lodash/camelCase';\n\nexport default function createActions(types) {\n  const actions = {};\n  Object.values(types).forEach(type => {\n    actions[camelCase(type)] = payload => ({ type, payload });\n  });\n  return actions;\n}","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './index.module.scss';\n\nconst Loader = ({ className }) => {\n  return (\n    <svg className={cx(styles.container, className)} viewBox='0 0 34 34'>\n      <path\n        d='M17 32c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15C8.716 2 2 8.716 2 17'\n        stroke='currentColor'\n        fill='none'\n        strokeWidth='3'\n        fillRule='evenodd'\n      ></path>\n    </svg>\n  );\n};\n\nLoader.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default memo(Loader);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__2D0tt\",\"spin\":\"Loader_spin__hCqkh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"suspenseFallback\":\"app_suspenseFallback__3HZna\"};","const GET_BILLS = 'GET_BILLS';\nconst GET_BILLS_SUCCESS = 'GET_BILLS_SUCCESS';\nconst GET_BILLS_ERROR = 'GET_BILLS_ERROR';\n\nconst DELETE_BILL = 'DELETE_BILL';\nconst UPDATE_BILL = 'UPDATE_BILL';\n\nexport {\n  GET_BILLS,\n  GET_BILLS_SUCCESS,\n  GET_BILLS_ERROR,\n  DELETE_BILL,\n  UPDATE_BILL,\n};","import React, { lazy, Suspense } from 'react';\nimport Loader from 'shared/Loader';\nimport styles from 'styles/app.module.scss';\n\nconst Header = lazy(() => import('components/Header'));\nconst BillsManager = lazy(() => import('containers/BillsManager'));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Suspense fallback={<Loader className={styles.suspenseFallback} />}>\n        <Header />\n        <BillsManager />\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n ","import * as billManagerTypes from 'redux/actionTypes/billManager';\nimport { MONTH_MAP, MONTHLY_BUDGET } from 'constants/billManager';\n\nconst initState = {\n  bills: [],\n  billsById: {},\n  billsLoading: false,\n  billsError: {},\n  categories: [],\n  timeSeriesChartData: [],\n};\n\nconst getBillsToBePaidByMonth = (bills) => {\n  const groupByMonth = {};\n  const billsById = {};\n  bills.forEach((bill) => {\n    const date = new Date(bill.date);\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    const key = `${month}-${year}`;\n    billsById[bill.id] = bill;\n    if (!groupByMonth[key]) groupByMonth[key] = [];\n    groupByMonth[key].push(bill);\n  });\n  Object.keys(groupByMonth).forEach((key) => {\n    const monthlyBillSortedArray = groupByMonth[key].sort(\n      (a, b) => a.amount - b.amount\n    );\n    let totalAmount = 0;\n    monthlyBillSortedArray.forEach((bill) => {\n      totalAmount += Number(bill.amount);\n      if (totalAmount <= MONTHLY_BUDGET) {\n        billsById[bill.id] = { ...bill, canBePaid: true };\n      } else {\n        billsById[bill.id] = { ...bill, canBePaid: false };\n      }\n    });\n  });\n  return billsById;\n};\n\nconst getTimeSeriesChartData = (bills) => {\n  const timeSeriesObj = {};\n  const timeSeriesChartData = [];\n  bills.forEach((bill) => {\n    const date = new Date(bill.date);\n    const monthIndex = date.getMonth();\n    const month = MONTH_MAP[monthIndex];\n    const key = `${month}-${date.getFullYear()}`;\n    let keyAmount = timeSeriesObj[key]?.amount ?? 0;\n    timeSeriesObj[key] = {\n      month: key,\n      amount: keyAmount + Number(bill.amount),\n    };\n  });\n  Object.keys(timeSeriesObj).forEach((key) => {\n    timeSeriesChartData.push(timeSeriesObj[key]);\n  });\n  return timeSeriesChartData;\n};\n\nconst getCategories = (bills) => {\n  let categories = [];\n  bills.forEach(\n    (bill) =>\n      !categories.includes(bill.category) && categories.push(bill.category)\n  );\n  return categories;\n};\n\nexport default function (state = initState, { type, payload }) {\n  switch (type) {\n    case billManagerTypes.GET_BILLS:\n      return {\n        ...state,\n        billsLoading: true,\n        billsError: {},\n      };\n\n    case billManagerTypes.GET_BILLS_SUCCESS: {\n      const timeSeriesChartData = getTimeSeriesChartData(payload);\n      const billsById = getBillsToBePaidByMonth(payload);\n      const bills = payload.map((bill) => billsById[bill.id]);\n      const categories = getCategories(payload);\n      return {\n        ...state,\n        billsLoading: false,\n        bills,\n        billsById,\n        categories,\n        timeSeriesChartData,\n      };\n    }\n\n    case billManagerTypes.GET_BILLS_ERROR:\n      return {\n        ...state,\n        billsLoading: false,\n        bills: payload,\n      };\n\n    case billManagerTypes.DELETE_BILL: {\n      let { bills } = state;\n      bills = bills.filter((bill) => bill.id !== payload);\n      return {\n        ...state,\n        bills,\n      };\n    }\n\n    case billManagerTypes.UPDATE_BILL: {\n      let { bills, billsById } = state;\n      if (!payload.id) payload.id = bills.length;\n      billsById[payload.id] = payload;\n      bills = bills.map((bill) => {\n        if (bill.id === payload.id) {\n          return payload;\n        }\n        return bill;\n      });\n      const timeSeriesChartData = getTimeSeriesChartData(bills);\n      billsById = getBillsToBePaidByMonth(bills);\n      bills = bills.map((bill) => billsById[bill.id]);\n      const categories = getCategories(bills);\n      return {\n        ...state,\n        bills,\n        timeSeriesChartData,\n        billsById,\n        categories,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport billManager from './billManager';\n\nexport default combineReducers({\n  billManager,\n});","import billsMock from '__mocks__/bills.json';\n\nconst getBills = () => {\n  return Promise.resolve(billsMock);\n};\n\nexport { getBills };\n","import { call, put, takeLatest } from 'redux-saga/effects';\n\nimport billManagerActions from 'redux/actions/billManager';\nimport * as billManagerTypes from 'redux/actionTypes/billManager';\nimport { getBills } from 'apis/billManager';\n\nfunction* getBillsSaga() {\n  try {\n    const { bills } = yield call(getBills);\n    yield put(billManagerActions.getBillsSuccess(bills));\n  } catch (err) {\n    yield put(billManagerActions.getBillsError(err));\n  }\n}\n\nexport default [takeLatest(billManagerTypes.GET_BILLS, getBillsSaga)];\n","import { all } from 'redux-saga/effects';\n\nimport billManagerSaga from './billManager';\n\nexport default function* rootSaga() {\n  yield all([...billManagerSaga]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from 'redux/reducers';\nimport rootSaga from 'redux/sagas';\n\nconst bindMiddlewares = (middlewares) => {\n  if (process.env.NODE_ENV !== 'production') {\n    const { composeWithDevTools } = require('redux-devtools-extension');\n    return composeWithDevTools(applyMiddleware(...middlewares));\n  }\n  return applyMiddleware(...middlewares);\n};\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, bindMiddlewares([sagaMiddleware]));\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport 'styles/index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}